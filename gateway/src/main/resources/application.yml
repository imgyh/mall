spring:
  cloud:
    gateway:
      #跨域处理，需要关闭具体微服务上的跨域设置，否则此设置无效
      globalcors: # 全局的跨域配置
        add-to-simple-url-handler-mapping: true # 解决options请求被拦截问题
        # options请求 就是一种询问服务器是否浏览器可以跨域的请求
        # 如果每次跨域都有询问服务器是否浏览器可以跨域对性能也是损耗
        # 可以配置本次跨域检测的有效期maxAge
        # 在maxAge设置的时间范围内，不去询问，统统允许跨域
        corsConfigurations:
          '[/**]':
            allowedOriginPatterns: # 允许哪些网站的跨域请求
              - "*"
            allowedMethods: # 允许的跨域ajax的请求方式
              - "GET"
              - "POST"
              - "DELETE"
              - "PUT"
              - "OPTIONS"
            allowedHeaders: "*"    # 允许在请求中携带的头信息
            allowCredentials: true    # 允许在请求中携带cookie
            maxAge: 360000            # 本次跨域检测的有效期(单位毫秒)
            # 有效期内，跨域请求不会一直发option请求去增大服务器压力
      routes: # id 越靠前越先匹配
        - id: product
          uri: lb://product # lb 负载均衡 需要添加 spring-cloud-loadbalancer
          predicates:
            - Path=/api/product/**
          filters:
            - RewritePath=/api/?(?<segment>.*), /$\{segment}
        - id: thirdparty
          uri: lb://thirdparty # lb 负载均衡 需要添加 spring-cloud-loadbalancer
          predicates:
            - Path=/api/thirdparty/**
          filters:
            - RewritePath=/api/?(?<segment>.*), /$\{segment}
        - id: member
          uri: lb://member # lb 负载均衡 需要添加 spring-cloud-loadbalancer
          predicates:
            - Path=/api/member/**
          filters:
            - RewritePath=/api/?(?<segment>.*), /$\{segment}
        - id: ware
          uri: lb://ware # lb 负载均衡 需要添加 spring-cloud-loadbalancer
          predicates:
            - Path=/api/ware/**
          filters:
            - RewritePath=/api/?(?<segment>.*), /$\{segment}
        - id: renren
          uri: lb://renren # lb 负载均衡 需要添加 spring-cloud-loadbalancer
          predicates:
            - Path=/api/**
          filters:
            - RewritePath=/api/?(?<segment>.*), /renren-fast/$\{segment}
        - id: host_route # 配置首页路由, 首页html写在product微服务中
          uri: lb://product # lb 负载均衡 需要添加 spring-cloud-loadbalancer
          predicates:
            - Host=mall.gyh.im, item.mall.gyh.im
        - id: search_route # 配置搜索页路由, 搜索页页html写在search微服务中
          uri: lb://search # lb 负载均衡 需要添加 spring-cloud-loadbalancer
          predicates:
            - Host=search.mall.gyh.im
